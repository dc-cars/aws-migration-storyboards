ncspral24
=========

== Storyboard: Update BigIP VIPs to use AWS instance ==


[] Open local terminal

[] Export "cron" user password we use for checks
{{{
   export CRON_MYSQL_PW=<reducted>;

   export FAILURE_COLOR=$(echo -e "\e[1;41m");
   export SUCCESS_COLOR=$(echo -e "\e[1;42m");
   export RESET_COLOR=$(echo -e "\e[0m");
}}}

[] Login to BigIP F5

=== VIP: cps.repl.db.newcars.com / Pool: cps_repl_db_pool ===

[] Locate following VIP/Pool
{{{
- VIP: cps.repl.db.newcars.com
  - Pool: cps_repl_db_pool
    - Pool member: 172.20.89.54:3008
      - State: Available (Enabled) - Pool member is available
}}}

[] Navigate to Pool members

[] Remove old Pool member: 172.20.89.54:3008

[] Add new Pool member: 172.28.240.14:3008

[] Wait until status is: Available (Enabled) - Pool member is available

[] Test access to the new server VIP (use mariadb mysql client)
{{{
export DB_HOST="cps.repl.db.newcars.com";
export DB_NAME="cps";
( \
  [ \
    "$(mysql \
     --host="${DB_HOST}" \
     --port=3306 \
     --database="${DB_NAME}" \
     --user=cron \
     --password="${CRON_MYSQL_PW}" \
     --skip-auto-rehash \
     --skip-column-names \
     --batch \
     --execute="select database();" \
    )" == "${DB_NAME}" \
  ] \
  && echo -e "\n${SUCCESS_COLOR}SUCCESS: connection successful${RESET_COLOR}\n"; \
) \
|| echo -e "\n${FAILURE_COLOR}FAILURE: did not connect to database${RESET_COLOR}\n"
}}}


=== VIP: leads.repl.db.newcars.com / Pool: newcars_leads.repl.db-1 ===

[] Locate following VIP/Pool
{{{
- VIP: leads.repl.db.newcars.com
  - Pool: newcars_leads.repl.db-1
    - Pool member: 172.20.89.54:3306
      - State: Available (Enabled) - Pool member is available
}}}

[] Navigate to Pool members

[] Remove old Pool member: 172.20.89.54:3306

[] Add new Pool member: 172.28.240.14:3306

[] Wait until status is: Available (Enabled) - Pool member is available

[] Test access to the new server VIP (use mariadb mysql client)
{{{
export DB_HOST="leads.repl.db.newcars.com";
export DB_NAME="leads";
( \
  [ \
    "$(mysql \
     --host="${DB_HOST}" \
     --port=3306 \
     --database="${DB_NAME}" \
     --user=cron \
     --password="${CRON_MYSQL_PW}" \
     --skip-auto-rehash \
     --skip-column-names \
     --batch \
     --execute="select database();" \
    )" == "${DB_NAME}" \
  ] \
  && echo -e "\n${SUCCESS_COLOR}SUCCESS: connection successful${RESET_COLOR}\n"; \
) \
|| echo -e "\n${FAILURE_COLOR}FAILURE: did not connect to database${RESET_COLOR}\n"
}}}


=== VIP: new-semi.repl.db.newcars.com / Pool: newcars_new-semi.repl.db-1 ===

[] Locate following VIP/Pool
{{{
- VIP: new-semi.repl.db.newcars.com
  - Pool: newcars_new-semi.repl.db-1
    - Pool member: 172.20.89.54:3020
      - State: Available (Enabled) - Pool member is available
}}}

[] Navigate to Pool members

[] Remove old Pool member: 172.20.89.54:3020

[] Add new Pool member: 172.20.89.54:3020

[] Wait until status is: Available (Enabled) - Pool member is available

[] Test access to the new server VIP (use mariadb mysql client)
{{{
export DB_HOST="new-semi.repl.db.newcars.com";
export DB_NAME="semi";
( \
  [ \
    "$(mysql \
     --host="${DB_HOST}" \
     --port=3306 \
     --database="${DB_NAME}" \
     --user=cron \
     --password="${CRON_MYSQL_PW}" \
     --skip-auto-rehash \
     --skip-column-names \
     --batch \
     --execute="select database();" \
    )" == "${DB_NAME}" \
  ] \
  && echo -e "\n${SUCCESS_COLOR}SUCCESS: connection successful${RESET_COLOR}\n"; \
) \
|| echo -e "\n${FAILURE_COLOR}FAILURE: did not connect to database${RESET_COLOR}\n"
}}}


=== VIP: old-semi.repl.db.newcars.com / Pool: newcars_old-semi.repl.db-1 ===

[] Locate following VIP/Pool
{{{
- VIP: old-semi.repl.db.newcars.com
  - Pool: newcars_old-semi.repl.db-1
    - Pool member: 172.20.89.54:3014
      - State: Available (Enabled) - Pool member is available
}}}

[] Navigate to Pool members

[] Remove old Pool member: 172.20.89.54:3014

[] Add new Pool member: 172.28.240.14:3014

[] Wait until status is: Available (Enabled) - Pool member is available

[] Test access to the new server VIP (use mariadb mysql client)
{{{
export DB_HOST="old-semi.repl.db.newcars.com";
export DB_NAME="semi";
( \
  [ \
    "$(mysql \
     --host="${DB_HOST}" \
     --port=3306 \
     --database="${DB_NAME}" \
     --user=cron \
     --password="${CRON_MYSQL_PW}" \
     --skip-auto-rehash \
     --skip-column-names \
     --batch \
     --execute="select database();" \
    )" == "${DB_NAME}" \
  ] \
  && echo -e "\n${SUCCESS_COLOR}SUCCESS: connection successful${RESET_COLOR}\n"; \
) \
|| echo -e "\n${FAILURE_COLOR}FAILURE: did not connect to database${RESET_COLOR}\n"
}}}


=== VIP: wps.repl.db.newcars.com / Pool: wps_repl_db_pool ===

[] Locate following VIP/Pool
{{{
- VIP: wps.repl.db.newcars.com
  - Pool: wps_repl_db_pool
    - Pool member: 172.20.89.54:3007
      - State: Available (Enabled) - Pool member is available
}}}
[] Navigate to Pool members

[] Remove old Pool member: 172.20.89.54:3007

[] Add new Pool member: 172.28.240.14:3007

[] Wait until status is: Available (Enabled) - Pool member is available

[] Test access to the new server VIP (use mariadb mysql client)
{{{
export DB_HOST="wps.repl.db.newcars.com";
export DB_NAME="wps";
( \
  [ \
    "$(mysql \
     --host="${DB_HOST}" \
     --port=3306 \
     --database="${DB_NAME}" \
     --user=cron \
     --password="${CRON_MYSQL_PW}" \
     --skip-auto-rehash \
     --skip-column-names \
     --batch \
     --execute="select database();" \
    )" == "${DB_NAME}" \
  ] \
  && echo -e "\n${SUCCESS_COLOR}SUCCESS: connection successful${RESET_COLOR}\n"; \
) \
|| echo -e "\n${FAILURE_COLOR}FAILURE: did not connect to database${RESET_COLOR}\n"
}}}
